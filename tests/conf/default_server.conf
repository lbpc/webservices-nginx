server {
  listen 0.0.0.0:80 default_server;
  listen 0.0.0.0:443 ssl http2 default_server;
  ssl_certificate  /read/ssl/majordomo.ru.pem;
  ssl_certificate_key /read/ssl/majordomo.ru.key;
  ssl_certificate_by_lua_file lua/default_server_ssl.lua;
  allow 127.0.0.1;
  allow 172.16.0.0/16;
  allow 81.95.28.24/29;
  deny all;
  keepalive_timeout 0;
  error_page 403 /http_403.html;
  location = /http_403.html {
    root html;
    ssi on;
    internal;
    allow all;
  }
  error_page 404 /http_404.html;
  location = /http_404.html {
    root html;
    ssi on;
    internal;
    allow all;
  }
  location / {
    try_files $uri =403;
  }
  location /unarc {
    client_max_body_size 0;
    proxy_pass http://fileserver;
    allow all;
  }
  location /server-status {
    stub_status on;
    access_log off;
  }
  location /status {
    vhost_traffic_status_display;
    vhost_traffic_status_display_format html;
    access_log off;
  }
  location /ip-filter {
    content_by_lua_file lua/filter_api.lua;
  }
  location ~ /apache2/(.*) {
    set_by_lua_block $ups_name {
      local p =
        ngx.var.uri:match('^/(.+/default)') or
        ngx.var.uri:match('^/(.+/unsafe)') or
        ngx.var.uri:match('^/(.+/nochmod)') or
        ngx.var.uri:match('^/(.+/hardened)') or
        ngx.var.uri:match('^/(.+)/') .. '/default'
      return p:gsub('/', '-')
    }
    rewrite /apache2/([^/]+/)+(.*) /$2 break;
    error_page 502 =403 /http_403.html;
    proxy_pass http://$ups_name;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto http;
    proxy_set_header Range "";
  }
}
